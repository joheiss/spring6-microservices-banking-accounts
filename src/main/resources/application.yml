server:
  port: 8091

spring:
  application:
    name: accounts
  profiles:
    active: prod
  datasource:
    url: jdbc:mysql://localhost:3306/accountsdb
    username: root
    password: root
  #     url: jdbc:h2:mem:testdb
  #     driverClassName: org.h2.Driver
  #     username: sa
  #     password: ''
  # h2:
  #     console:
  #         enabled: true
  jpa:
    # database-platform: org.hibernate.dialect.H2Dialect
    # hibernate:
    #     ddl-auto: update
    show-sql: true
  sql:
    init:
      mode: always
  config:
    import: "optional:configserver:http://localhost:8071/"
  # rabbitmq:
  #   host: localhost
  #   port: 5672
  #   username: guest
  #   password: guest
  #   connection-timeout: 10s
  cloud:
    refresh:
      enabled: false
    kubernetes:
      discovery:
        discovery-server-url: "http://spring-cloud-kubernetes-discoveryserver"      
        all-namespaces: true
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
      kafka:
        binder:
          brokers:
            - localhost:9092
      default-binder: kafka

# eureka:
#   instance:
#     preferIpAddress: true
#   client:
#     fetchRegistry: true
#     registerWithEureka: true
#     serviceUrl:
#       defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: accounts
    description: "Spring Boot 3 - Microservices: Accounts Application"
    version: "1.0.0"

management:
  endpoints:
    web:
      exposure:
        include: "*"
        # include: "refresh"
        # include: "bus-refresh"
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 100
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        ignoreExceptions:
          - java.lang.NullPointerException
        retryExceptions:
          - java.util.concurrent.TimeoutException

  ratelimiter:
    configs:
      default:
        timeoutDuration: 1000
        limitRefreshPeriod: 5000
        limitForPeriod: 1

logging:
  level:
    com:
      jovisco: debug
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
